apply from: "$rootDir$project.TeamCity"
apply from: "$rootDir$project.Compiler"

ext {
    XMJars = rootDir.absolutePath + "$PROJECT_LIBS"
    output = rootDir.absolutePath + "$OUTPUT_DIR"
}

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.hujiang.aspectjx:gradle-android-plugin-aspectjx:$ASPECTJX"
        classpath "com.android.tools.build:gradle:$ANDROID_BUILD_TOOLS_VERSION"
        classpath "com.qihoo360.replugin:replugin-host-gradle:$REPLUGIN_VERSION"
        classpath "com.qihoo360.replugin:replugin-plugin-gradle:$REPLUGIN_VERSION"
        classpath("com.tencent.tinker:tinker-patch-gradle-plugin:${TINKER_VERSION}") {
            changing = TINKER_VERSION?.endsWith("-SNAPSHOT")
            exclude group: 'com.android.tools.build', module: 'gradle'
        }

        //四维地图需要依赖的工具
        classpath 'jcifs:jcifs:1.3.17'
        classpath 'org.aspectj:aspectjtools:1.9.1'
        classpath 'org.aspectj:aspectjweaver:1.9.1'

    }

    configurations.all {
        if ("${TINKER_ENABLE}" == "true") {
            resolutionStrategy.cacheDynamicVersionsFor(5, 'minutes')
            resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
        }
        resolutionStrategy.eachDependency {
            switch (requested.group) {
                case 'com.android.support':
                    if (requested.name != 'multidex') {
                        useVersion "$SUPPORT_LIBRARY_VERSION"
                    }
                    break
                case 'android.arch.lifecycle':
                    useVersion "$LIFECYCLE_VERSION"
                    break
            }
        }
    }
}


allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }
        maven {
            url 'https://raw.githubusercontent.com/MiEcosystem/mijiaSDK/stable3.0/repository'
        }
        maven {
            url "https://raw.githubusercontent.com/ViomiHome/viomi_sdk/master"
        }
        maven {
            url "https://raw.githubusercontent.com/tingban/maven-repository/release"
        }
    }

    tasks.withType(JavaCompile) {
        // 以 UTF-8 编码格式编译源码
        options.encoding = "UTF-8"
    }
}


gradle.taskGraph.whenReady {
    'git rm -r --cached settings.gradle'.execute()
    tasks.each { task ->
        if (task.name == 'mockableAndroidJar') {
            task.enabled = false
        }
    }
}

gradle.afterProject {
    File settingsGradle = new File(rootDir, "settings.gradle")
    if (settingsGradle.exists()) {
        return
    }
    String text = 'apply from: "$rootDir$Modules"\n' +
            '// 输入 All 表示编译全部 Module ;\n' +
            '// 输入 ${AppModuleName} 可以单独编译相关 AppModule 与该 AppModule 的依赖项;\n' +
            '// 如果需要同时编译多个 AppModule ,可以多次调用 include(${AppModuleName}) 方法;\n' +
            '// 如果需要新增 Module ,请前往 ${rootDir}/XMGradle/modules.gradle 进行配置;\n' +
            '\n' +
            'include(All)'
    settingsGradle.write(text)
}